# Generated by Django 5.0.6 on 2024-08-06 09:41

import accounts.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('olympiads', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255, verbose_name='Название')),
                ('code_name', models.CharField(max_length=3, verbose_name='Кодовое название')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Базовая цена курса')),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процент скидки')),
                ('coupon_discount', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Скидка по купону')),
            ],
            options={
                'verbose_name': 'тип курсов',
                'verbose_name_plural': 'типы курсов',
            },
        ),
        migrations.CreateModel(
            name='UserCourseAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'дополнительная услуга курса',
                'verbose_name_plural': 'дополнительные услуги курсов',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Название')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Краткое описание')),
                ('description', models.TextField(blank=True, null=True, verbose_name='О программе')),
                ('goal', models.TextField(blank=True, null=True, verbose_name='Цель')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Курс содержит')),
                ('categories_of_listeners', models.TextField(blank=True, null=True, verbose_name='Категории слушателей')),
                ('traineeship', models.TextField(blank=True, null=True, verbose_name='Стажировка')),
                ('final_examination', models.TextField(blank=True, null=True, verbose_name='Итоговая аттестация')),
                ('issued_document', models.TextField(blank=True, null=True, verbose_name='Выдаваемый документ')),
                ('education_degree', models.CharField(choices=[('HIGHER', 'Высшее'), ('SECONDARY', 'Среднее профессиональное')], max_length=255, verbose_name='Образование')),
                ('subject', models.CharField(choices=[('ENGLISH_LANGUAGE', 'Английский язык'), ('LIBRARY', 'Библиотечное дело'), ('BIOLOGY', 'Биология'), ('EDUCATIONAL_WORK', 'Воспитательная работа'), ('GEOGRAPHY', 'География'), ('ADDITIONAL_EDUCATION', 'Доп. образование'), ('PRESCHOOL_EDUCATION', 'Дошкольное образование'), ('ART', 'ИЗО'), ('FOREIGN_LANGUAGES', 'Иностранные языки'), ('COMPUTER_SCIENCE', 'Информатика'), ('HISTORY', 'История'), ('CLASS_MANAGEMENT', 'Классное руководство'), ('MATHS', 'Математика'), ('MUSIC', 'Музыка'), ('PRIMARY_CLASSES', 'Начальные классы'), ('LIFE_SAFETY', 'ОБЖ'), ('SPECIAL_EDUCATION', 'Обучение детей с ОВЗ'), ('SOCIAL_SCIENCE', 'Обществознание'), ('ENVIRONMENTAL_STUDIES', 'Окружающий мир'), ('RELIGIOUS_CULTURES', 'Основы религиозных культур'), ('LABOR_SAFETY', 'Охрана труда'), ('LAW', 'Право'), ('RUSSIAN_LITERATURE', 'Русская литература'), ('RUSSIAN_LANGUAGE', 'Русский язык'), ('SOCIAL_PEDAGOGY', 'Социальному педагогу'), ('TECHNOLOGY', 'Технология'), ('PHYSICS', 'Физика'), ('PHYSICAL_CULTURE', 'Физкультура'), ('CHEMISTRY', 'Химия'), ('SCHOOL_PSYCHOLOGIST', 'Школьному психологу'), ('ECONOMICS', 'Экономика')], max_length=50, verbose_name='Предмет')),
                ('image', models.FileField(blank=True, null=True, upload_to='courses', verbose_name='Изображение')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='olympiads.olympiad', verbose_name='Итоговое тестирование')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.coursevariation', verbose_name='Тип курса')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'курсы',
            },
        ),
        migrations.CreateModel(
            name='CourseApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_hours', models.IntegerField(choices=[(2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5 часов'), (6, '6 часов'), (7, '7 часов'), (8, '8 часов'), (10, '10 часов'), (16, '16 часов'), (36, '36 часов'), (72, '72 часа'), (108, '108 часов'), (144, '144 часа'), (180, '180 часов'), (216, '216 часов'), (248, '248 часов'), (300, '300 часов'), (500, '500 часов'), (600, '600 часов'), (900, '900 часов'), (1000, '1000 часов'), (1200, '1200 часов'), (1500, '1500 часов'), (2000, '2000 часов')], verbose_name='Количество часов')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='courses.course', verbose_name='Курс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_applications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'заявка на обучение',
                'verbose_name_plural': 'заявки на обучение',
            },
        ),
        migrations.CreateModel(
            name='CourseCollectiveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'заявка на коллективное обучение',
                'verbose_name_plural': 'заявки на коллективное обучение',
            },
        ),
        migrations.CreateModel(
            name='CourseCollectiveApplicationCoordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('phone_number', models.CharField(max_length=255, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('delivery_address', models.TextField(verbose_name='Адрес доставки документов')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordinator', to='courses.coursecollectiveapplication', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'координатор заявки коллективное обучение',
                'verbose_name_plural': 'координаторы заявки коллективное обучение',
            },
        ),
        migrations.CreateModel(
            name='CourseCollectiveApplicationStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('number_of_hours', models.IntegerField(choices=[(2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5 часов'), (6, '6 часов'), (7, '7 часов'), (8, '8 часов'), (10, '10 часов'), (16, '16 часов'), (36, '36 часов'), (72, '72 часа'), (108, '108 часов'), (144, '144 часа'), (180, '180 часов'), (216, '216 часов'), (248, '248 часов'), (300, '300 часов'), (500, '500 часов'), (600, '600 часов'), (900, '900 часов'), (1000, '1000 часов'), (1200, '1200 часов'), (1500, '1500 часов'), (2000, '2000 часов')], verbose_name='Количество часов')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='courses.coursecollectiveapplication', verbose_name='Заявка')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_students', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'студент заявки коллективное обучение',
                'verbose_name_plural': 'студенты заявки коллективное обучение',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_hours', models.IntegerField(choices=[(2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5 часов'), (6, '6 часов'), (7, '7 часов'), (8, '8 часов'), (10, '10 часов'), (16, '16 часов'), (36, '36 часов'), (72, '72 часа'), (108, '108 часов'), (144, '144 часа'), (180, '180 часов'), (216, '216 часов'), (248, '248 часов'), (300, '300 часов'), (500, '500 часов'), (600, '600 часов'), (900, '900 часов'), (1000, '1000 часов'), (1200, '1200 часов'), (1500, '1500 часов'), (2000, '2000 часов')], verbose_name='Количество часов курса')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabuses', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'учебный план',
                'verbose_name_plural': 'учебные планы',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabusModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('number_of_hours', models.IntegerField(verbose_name='Кол-во часов')),
                ('number_of_lectures', models.IntegerField(verbose_name='Кол-во лекций')),
                ('number_of_independent_works', models.IntegerField(verbose_name='Кол-во самостоятельных работ')),
                ('number_of_control_hours', models.IntegerField(verbose_name='Кол-во часов контроля')),
                ('module_order', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.coursesyllabus', verbose_name='Учебный план')),
            ],
            options={
                'verbose_name': 'модуль учебного плана',
                'verbose_name_plural': 'модули учебных планов',
                'ordering': ['module_order'],
            },
        ),
        migrations.CreateModel(
            name='CourseVariationHourCoefficientPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_hours', models.IntegerField(choices=[(2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5 часов'), (6, '6 часов'), (7, '7 часов'), (8, '8 часов'), (10, '10 часов'), (16, '16 часов'), (36, '36 часов'), (72, '72 часа'), (108, '108 часов'), (144, '144 часа'), (180, '180 часов'), (216, '216 часов'), (248, '248 часов'), (300, '300 часов'), (500, '500 часов'), (600, '600 часов'), (900, '900 часов'), (1000, '1000 часов'), (1200, '1200 часов'), (1500, '1500 часов'), (2000, '2000 часов')], verbose_name='Кол-во часов')),
                ('price_coefficient', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Коэффициент стоимости')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=40, max_digits=5, verbose_name='Процент скидки')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hour_coefficients', to='courses.coursevariation', verbose_name='Тип курса')),
            ],
            options={
                'verbose_name': 'коэффициент стоимости курса',
                'verbose_name_plural': 'коэффициенты стоимости курсов',
            },
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_hours', models.IntegerField(choices=[(2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5 часов'), (6, '6 часов'), (7, '7 часов'), (8, '8 часов'), (10, '10 часов'), (16, '16 часов'), (36, '36 часов'), (72, '72 часа'), (108, '108 часов'), (144, '144 часа'), (180, '180 часов'), (216, '216 часов'), (248, '248 часов'), (300, '300 часов'), (500, '500 часов'), (600, '600 часов'), (900, '900 часов'), (1000, '1000 часов'), (1200, '1200 часов'), (1500, '1500 часов'), (2000, '2000 часов')], verbose_name='Кол-во часов')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(blank=True, choices=[('MAN', 'Мужчина'), ('WOMAN', 'Женщина')], max_length=5, null=True, verbose_name='Пол')),
                ('citizenship', models.CharField(blank=True, choices=[('RU', 'Российская Федерация'), ('AZ', 'Азербайджан'), ('AM', 'Армения'), ('BY', 'Республика Беларусь'), ('GE', 'Грузия'), ('KG', 'Киргизия'), ('MD', 'Молдавия'), ('KZ', 'Казахстан'), ('TJ', 'Таджикистан'), ('UZ', 'Узбекистан'), ('UA', 'Украина')], max_length=255, null=True, verbose_name='Гражданство')),
                ('education_degree', models.CharField(blank=True, choices=[('HIGHER', 'Высшее'), ('SECONDARY', 'Среднее профессиональное')], max_length=255, null=True, verbose_name='Образование')),
                ('diploma_series', models.CharField(blank=True, max_length=255, null=True, verbose_name='Серия диплома')),
                ('diploma_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер диплома')),
                ('graduation_date', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год получения диплома')),
                ('qualification', models.CharField(blank=True, max_length=4, null=True, verbose_name='Квалификация в соответствии с документом об образовании')),
                ('snils', models.CharField(blank=True, max_length=255, null=True, validators=[accounts.validators.snils_validator], verbose_name='СНИЛС')),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Адрес и индекс для доставки удостоверения почтой России')),
                ('track_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Трек-номер')),
                ('diploma_scan', models.FileField(blank=True, null=True, upload_to='user_courses', verbose_name='Скан диплома')),
                ('is_paid', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Оплачен')),
                ('test_passed', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Итоговое тестирование пройдено')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_courses', to='courses.course', verbose_name='Курс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('additions', models.ManyToManyField(blank=True, related_name='courses', to='courses.usercourseaddition', verbose_name='Дополнения')),
            ],
            options={
                'verbose_name': 'курс пользователя',
                'verbose_name_plural': 'курсы пользователей',
            },
        ),
    ]
